name: Autenticación
description: |-

  APIs para gestionar la autenticación de usuarios
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: Autenticación
      groupDescription: |-

        APIs para gestionar la autenticación de usuarios
      subgroup: ''
      subgroupDescription: ''
      title: 'Registrar Usuario'
      description: 'Crea una nueva cuenta de usuario y devuelve un token de acceso.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nombre del usuario.'
        required: true
        example: 'Juan Pérez'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Correo electrónico del usuario. Debe ser único.'
        required: true
        example: juan@ejemplo.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Contraseña del usuario. Mínimo 8 caracteres.'
        required: true
        example: contraseña123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Juan Pérez'
      email: juan@ejemplo.com
      password: contraseña123
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "success": true,
              "message": "Usuario registrado exitosamente",
              "data": {
                  "user": {
                      "id": 1,
                      "name": "Juan Pérez",
                      "email": "juan@ejemplo.com",
                      "created_at": "2024-03-06T12:00:00.000000Z",
                      "updated_at": "2024-03-06T12:00:00.000000Z"
                  },
                  "token": "1|laravel_sanctum_token_example"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "success": false,
              "message": "Error de validación",
              "data": {
                  "email": ["El correo electrónico ya está en uso"],
                  "password": ["La contraseña debe tener al menos 8 caracteres"]
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Error al registrar usuario",
              "data": []
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Autenticación
      groupDescription: |-

        APIs para gestionar la autenticación de usuarios.
        Incluye endpoints para iniciar sesión y obtener tokens de acceso.
      subgroup: ''
      subgroupDescription: ''
      title: 'Iniciar Sesión'
      description: |-
        Inicia sesión con las credenciales proporcionadas y devuelve un token de acceso.
        El token devuelto debe ser incluido en el header Authorization de las siguientes peticiones.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'El correo electrónico del usuario registrado.'
        required: true
        example: usuario@ejemplo.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'La contraseña del usuario (mínimo 8 caracteres).'
        required: true
        example: contraseña123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: usuario@ejemplo.com
      password: contraseña123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "Inicio de sesión exitoso",
              "data": {
                  "user": {
                      "id": 1,
                      "name": "Usuario Ejemplo",
                      "email": "usuario@ejemplo.com",
                      "created_at": "2024-03-06T12:00:00.000000Z",
                      "updated_at": "2024-03-06T12:00:00.000000Z"
                  },
                  "token": "1|laravel_sanctum_token_example"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "success": false,
              "message": "Credenciales inválidas",
              "errors": {
                  "email": ["Las credenciales proporcionadas son incorrectas"]
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "success": false,
              "message": "Error de validación",
              "errors": {
                  "email": [
                      "El campo email es obligatorio",
                      "El email debe ser una dirección de correo válida"
                  ],
                  "password": ["El campo password es obligatorio"]
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Error al iniciar sesión",
              "errors": {
                  "error": ["Error interno del servidor"]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
